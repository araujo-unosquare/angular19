ngOnChanges
The ngOnChanges method runs after any component inputs have changed.

This step happens before the component's own template is checked. This means that you can update the component's state based on its initial input values.

During initialization, the first ngOnChanges runs before ngOnInit.

The ngOnChanges method accepts one SimpleChanges argument. This object is a Record mapping each component input name to a SimpleChange object. Each SimpleChange contains the input's previous value, its current value, and a flag for whether this is the first time the input has changed.

Does not detect changes to contents of objects or arrays. Need manual check.



ngOnInit
The ngOnInit method runs after Angular has initialized all the components inputs with their initial values. A component's ngOnInit runs exactly once.

This step happens before the component's own template is initialized. This means that you can update the component's state based on its initial input values.

it's the preferred place to fetch data from an API. Fetching in constructor is not ideal because angular's CD and DI are not fully initialized

If you try to use input properties in cpnstructor,they will be undefined.


ngDoCheck
The ngDoCheck method runs before every time Angular checks a component's template for changes.

You can use this lifecycle hook to manually check for state changes outside of Angular's normal change detection, manually updating the component's state.

This method runs very frequently and can significantly impact your page's performance. Avoid defining this hook whenever possible, only using it when you have no alternative.

During initialization, the first ngDoCheck runs after ngOnInit.

ngOnChanges vs ngDoCheck
onchanges is bound to @Input
ngDocheck also checks non input


ngAfterContentInit
The ngAfterContentInit method runs once after all the children nested inside the component (its content) have been initialized.

You can use this lifecycle hook to read the results of content queries. While you can access the initialized state of these queries, attempting to change any state in this method results in an ExpressionChangedAfterItHasBeenCheckedError


ngAfterContentChecked
The ngAfterContentChecked method runs every time the children nested inside the component (its content) have been checked for changes.

This method runs very frequently and can significantly impact your page's performance. Avoid defining this hook whenever possible, only using it when you have no alternative.



ngAfterViewInit
The ngAfterViewInit method runs once after all the children in the component's template (its view) have been initialized.

ngOnInit vs ngAfterViewInit
ngAfterViewInit guarantess view is rendered


ngAfterViewChecked
The ngAfterViewChecked method runs every time the children in the component's template (its view) have been checked for changes.



ngOnDestroy
The ngOnDestroy method runs once just before a component is destroyed. Angular destroys a component when it is no longer shown on the page, such as being hidden by @if or upon navigating to another page.